<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cargoes.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="cargoes.model.po.Role">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="order" property="order" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		`id`, `code`, `name`, `description`, `order`, `status`, `create_time`, `modify_time`
	</sql>
	<!--  -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where id = #{id,jdbcType=VARCHAR}
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sys_role
			where id = #{id,jdbcType=VARCHAR};
		
		delete from sys_role_authority
		    where role_id = #{id,jdbcType=VARCHAR};
		    
		delete from sys_user_role
		    where role_id = #{id,jdbcType=VARCHAR};
	</delete>
	
	<insert id="insert" parameterType="cargoes.model.po.Role">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into sys_role (
			`id`, 
			`code`, 
			`name`,
			`description`, 
			`order`, 
			`status`,
			`create_time`,
			`modify_time`)
		values (
			#{id,jdbcType=VARCHAR}, 
			#{code,jdbcType=VARCHAR},
			#{name,jdbcType=VARCHAR},
			#{description,jdbcType=VARCHAR}, 
			#{order,jdbcType=INTEGER},
			#{status,jdbcType=INTEGER}, 
			#{createTime,jdbcType=TIMESTAMP},
			#{modifyTime,jdbcType=TIMESTAMP});
		
		<if test="authorities != null and authorities.size > 0">
			<foreach collection="authorities" item="authority">
			INSERT INTO `sys_role_authority`(
				`id`,
	            `role_id`,
	            `authority_id`)
			VALUES (
				(select replace(uuid(),'-','') from dual),
				#{id,jdbcType=VARCHAR},
		        #{authority.id,jdbcType=VARCHAR});
			</foreach>
		</if>
		
	</insert>
	<!--  -->
	<insert id="insertSelective" parameterType="cargoes.model.po.Role">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				`id`,
			</if>
			<if test="code != null">
				`code`,
			</if>
			<if test="name != null">
				`name`,
			</if>
			<if test="description != null">
				`description`,
			</if>
			<if test="order != null">
				`order`,
			</if>
			<if test="status != null">
				`status`,
			</if>
			<if test="createTime != null">
				`create_time`,
			</if>
			<if test="modifyTime != null">
				`modify_time`,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="order != null">
				#{order,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
		;
		<if test="authorities != null and authorities.size > 0">
			<foreach collection="authorities" item="authority">
			INSERT INTO `sys_role_authority`(
				`id`,
	            `role_id`,
	            `authority_id`)
			VALUES (
				(select replace(uuid(),'-','') from dual),
				#{id,jdbcType=VARCHAR},
		        #{authority.id,jdbcType=VARCHAR});
			</foreach>
		</if>
		
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cargoes.model.po.Role">
		update sys_role
		<set>
			<if test="code != null">
				`code` = #{code,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				`name` = #{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				`description` = #{description,jdbcType=VARCHAR},
			</if>
			<if test="order != null">
				`order` = #{order,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				`status` = #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				`create_time` = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				`modify_time` = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR};
		
		<if test="authorities != null">
		    delete from sys_role_authority
		    	where role_id = #{id,jdbcType=VARCHAR};
		    <if test="authorities.size > 0">
				<foreach collection="authorities" item="authority">
					INSERT INTO `sys_role_authority`(
						`id`,
			            `role_id`,
			            `authority_id`)
					VALUES (
						(select replace(uuid(),'-','') from dual),
						#{id,jdbcType=VARCHAR},
				        #{authority.id,jdbcType=VARCHAR});
				</foreach>
			</if>
		</if>
		
	</update>
	<update id="updateByPrimaryKey" parameterType="cargoes.model.po.Role">
		update sys_role
			set 
				`code` = #{code,jdbcType=VARCHAR},
				`name` = #{name,jdbcType=VARCHAR},
				`description` = #{description,jdbcType=VARCHAR},
				`order` = #{order,jdbcType=INTEGER},
				`status` = #{status,jdbcType=INTEGER},
				`create_time` = #{createTime,jdbcType=TIMESTAMP},
				`modify_time` = #{modifyTime,jdbcType=TIMESTAMP}
		where 
			id = #{id,jdbcType=VARCHAR};
		
		delete from sys_role_authority
		    where role_id = #{id,jdbcType=VARCHAR};
		
		<if test="authorities != null and authorities.size > 0">
			<foreach collection="authorities" item="authority">
				INSERT INTO `sys_role_authority`(
					`id`,
		            `role_id`,
		            `authority_id`)
				VALUES (
					(select replace(uuid(),'-','') from dual),
					#{id,jdbcType=VARCHAR},
			        #{authority.id,jdbcType=VARCHAR});
			</foreach>
		</if>
		
	</update>
	
	<!-- -->
	<select id="selectList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_role
	</select>
	
	<!-- -->
	<select id="selectByPrimaryKeys" resultMap="BaseResultMap"
		parameterType="java.util.List">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where
		<if test="ids != null and ids.size > 0">
			<foreach collection="ids" item="id" open="id in(" close=")" separator=",">
				#{id,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="ids == null or ids.size == 0">
			id is null
		</if>
	</select>

	<!--  -->
	<delete id="deleteByPrimaryKeys" parameterType="java.util.List">
		delete from sys_role
		where
		<if test="ids != null and ids.size > 0">
			<foreach collection="ids" item="id" open="id in(" close=")" separator=",">
				#{id,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="ids == null or ids.size == 0">
			id is null
		</if>
		;
		delete from sys_role_authority
		where
		<if test="ids != null and ids.size > 0">
			<foreach collection="ids" item="id" open="role_id in(" close=")" separator=",">
				#{id,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="ids == null or ids.size == 0">
			role_id is null
		</if>
		;
		delete from sys_user_role
		    where 
	    <if test="ids != null and ids.size > 0">
			<foreach collection="ids" item="id" open="role_id in(" close=")" separator=",">
				#{id,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="ids == null or ids.size == 0">
			role_id is null
		</if>
		;
	</delete>
</mapper>