<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cargoes.dao.SysUserMapper">
	<resultMap id="BaseResultMap" type="cargoes.model.po.SysUser">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="INTEGER" />
		<result column="phone" property="phone" jdbcType="CHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="DATE" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="last_change_password" property="lastChangePassword" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="expired" property="expired" jdbcType="INTEGER" />
		<result column="locked" property="locked" jdbcType="INTEGER" />
		<result column="credentials_expired" property="credentialsExpired" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="AuthoritiesResultMap" type="cargoes.model.po.SysUser" extends="BaseResultMap">
  	<collection property="roles" javaType="cargoes.model.po.Role">
  		<id column="role_id" property="id" jdbcType="VARCHAR" />
	    <result column="role_code" property="code" jdbcType="VARCHAR" />
	    <result column="role_name" property="name" jdbcType="VARCHAR" />
	    <result column="role_description" property="description" jdbcType="VARCHAR" />
	    <result column="role_create_time" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="role_modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
	    <result column="role_order" property="order" jdbcType="INTEGER" />
	    <collection property="authorities" javaType="cargoes.model.po.Authority">
		    <id column="authority_id" property="id" jdbcType="VARCHAR" />
		    <result column="authority_code" property="code" jdbcType="VARCHAR" />
		    <result column="authority_name" property="name" jdbcType="VARCHAR" />
		    <result column="authority_description" property="description" jdbcType="VARCHAR" />
		    <result column="authority_create_time" property="createTime" jdbcType="TIMESTAMP" />
		    <result column="authority_modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
		    <result column="authority_order" property="order" jdbcType="INTEGER" />
  		</collection>
  	</collection>
  	<collection property="department" column="department_id" select="cargoes.dao.DepartmentMapper.selectByPrimaryKey"></collection>
  </resultMap>
  
  <resultMap id="PageResultMap" type="cargoes.model.po.SysUser" extends="BaseResultMap">
  	<collection property="roles" column="id" select="cargoes.dao.RoleMapper.selectByUserId">
	    <collection property="authorities" column="id" select="cargoes.dao.AuthorityMapper.selectByRoleId"></collection>
  	</collection>
  	<collection property="department" column="department_id" select="cargoes.dao.DepartmentMapper.selectByPrimaryKey"></collection>
  </resultMap>
  
	<sql id="Base_Column_List">
	`id`, `name`, `username`, `password`, `gender`, `phone`, `email`, `birthday`, `department_id`, `create_time`, 
	`modify_time`, `salt`, `last_change_password`, `status`, `expired`, `locked`, `credentials_expired`
	</sql>
	<select id="selectByPrimaryKey" resultMap="AuthoritiesResultMap"
		parameterType="java.lang.String">
		SELECT 
		  u.id,
		  u.name,
		  u.username,
		  u.gender,
		  u.phone,
		  u.email,
		  u.birthday,
		  u.status,
		  u.create_time,
		  u.modify_time,
		  u.department_id,
		  u.last_change_password,
		  u.expired,
		  u.locked, 
		  u.credentials_expired,
		  u.password,
		  u.salt,
		  
		  r.id AS role_id,
		  r.code AS role_code,
		  r.name AS role_name,
		  r.modify_time AS role_modify_time,
		  r.create_time AS role_create_time,
		  r.description AS role_description,
		  r.order AS role_order,
		  
		  a.id AS authority_id,
		  a.code AS authority_code,
		  a.name AS authority_name,
		  a.description AS authority_description,
		  a.create_time AS authority_create_time,
		  a.modify_time AS authority_modify_time,
		  a.order AS authority_order,
		  
		  dept.id AS dept_id,
		  dept.code AS dept_code,
		  dept.name AS dept_name,
		  dept.description AS dept_description,
		  dept.parent_id AS dept_parent_id,
		  dept.create_time AS dept_create_time,
		  dept.modify_time AS dept_modify_time,
		  dept.order AS dept_order
		  
		FROM
		  sys_user u 
		  LEFT JOIN sys_user_role ur 
		    ON u.id = ur.user_id 
		  LEFT JOIN sys_role r 
		    ON r.id = ur.role_id
		  LEFT JOIN sys_role_authority ra 
		    ON ra.role_id = r.id 
		  LEFT JOIN sys_authority a 
		    ON ra.authority_id = a.id
		  LEFT JOIN sys_department dept
		  	ON dept.id = u.department_id
		WHERE 
			u.id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sys_user
			where id = #{id,jdbcType=VARCHAR};
		
		delete from sys_user_role
		    where user_id = #{id,jdbcType=VARCHAR};
	</delete>
	<insert id="insert" parameterType="cargoes.model.po.SysUser">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into sys_user (
			`id`, 
			`name`, 
			`username`,
			`password`, 
			`gender`, 
			`phone`,
			`email`, 
			`birthday`, 
			`department_id`,
			`create_time`, 
			`modify_time`, 
			`salt`,
			`last_change_password`, 
			`status`, 
			`expired`,
			`locked`, 
			`credentials_expired`)
		values (
			#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
			#{username,jdbcType=VARCHAR},
			#{password,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{phone,jdbcType=CHAR},
			#{email,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE},
			#{department.id,jdbcType=VARCHAR},
			#{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{salt,jdbcType=VARCHAR},
			#{lastChangePassword,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER},
			#{expired,jdbcType=INTEGER},
			#{locked,jdbcType=INTEGER}, #{credentialsExpired,jdbcType=INTEGER});
		
		<if test="roles != null and roles.size > 0">
			<foreach collection="roles" item="role">
				insert into sys_user_role (id, user_id, role_id)
				values (
				(select replace(uuid(),'-','') from dual),
				#{id,jdbcType=VARCHAR},
				#{role.id,jdbcType=VARCHAR});
			</foreach>
		</if>
	</insert>
	<insert id="insertSelective" parameterType="cargoes.model.po.SysUser">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="department != null">
				department_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="lastChangePassword != null">
				last_change_password,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="expired != null">
				expired,
			</if>
			<if test="locked != null">
				locked,
			</if>
			<if test="credentialsExpired != null">
				credentials_expired,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=CHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=DATE},
			</if>
			<if test="department != null">
				#{department.id,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="lastChangePassword != null">
				#{lastChangePassword,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="expired != null">
				#{expired,jdbcType=INTEGER},
			</if>
			<if test="locked != null">
				#{locked,jdbcType=INTEGER},
			</if>
			<if test="credentialsExpired != null">
				#{credentialsExpired,jdbcType=INTEGER},
			</if>
		</trim>
		
		;
	    <if test="roles != null and roles.size > 0">
			<foreach collection="roles" item="role">
				insert into sys_user_role (id, user_id, role_id)
				values (
				(select replace(uuid(),'-','') from dual),
				#{id,jdbcType=VARCHAR},
				#{role.id,jdbcType=VARCHAR});
			</foreach>
		</if>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cargoes.model.po.SysUser">
		update sys_user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=CHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=DATE},
			</if>
			<if test="department != null">
				department_id = #{department.id,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="lastChangePassword != null">
				last_change_password = #{lastChangePassword,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="expired != null">
				expired = #{expired,jdbcType=INTEGER},
			</if>
			<if test="locked != null">
				locked = #{locked,jdbcType=INTEGER},
			</if>
			<if test="credentialsExpired != null">
				credentials_expired = #{credentialsExpired,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR};
		
	    <if test="roles != null">
		    delete from sys_user_role
		    	where user_id = #{id,jdbcType=VARCHAR};
		    <if test="roles.size > 0">
				<foreach collection="roles" item="role">
					insert into sys_user_role (
						id, 
						user_id, 
						role_id)
					values (
						(select replace(uuid(),'-','') from dual),
						#{id,jdbcType=VARCHAR},
						#{role.id,jdbcType=VARCHAR});
				</foreach>
			</if>
		</if>
	</update>
	<update id="updateByPrimaryKey" parameterType="cargoes.model.po.SysUser">
		update sys_user
			set 
				name = #{name,jdbcType=VARCHAR},
				username = #{username,jdbcType=VARCHAR},
				password = #{password,jdbcType=VARCHAR},
				gender = #{gender,jdbcType=INTEGER},
				phone = #{phone,jdbcType=CHAR},
				email = #{email,jdbcType=VARCHAR},
				birthday = #{birthday,jdbcType=DATE},
				department_id = #{department.id,jdbcType=VARCHAR},
				create_time = #{createTime,jdbcType=TIMESTAMP},
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
				salt = #{salt,jdbcType=VARCHAR},
				last_change_password = #{lastChangePassword,jdbcType=TIMESTAMP},
				status = #{status,jdbcType=INTEGER},
				expired = #{expired,jdbcType=INTEGER},
				locked = #{locked,jdbcType=INTEGER},
				credentials_expired = #{credentialsExpired,jdbcType=INTEGER}
		where 
			id = #{id,jdbcType=VARCHAR};
		
	    delete from sys_user_role
		    where user_id = #{id,jdbcType=VARCHAR};
		    
		<if test="roles != null and roles.size > 0">
			<foreach collection="roles" item="role">
				insert into sys_user_role (id, user_id, role_id)
				values (
				(select replace(uuid(),'-','') from dual),
				#{id,jdbcType=VARCHAR},
				#{role.id,jdbcType=VARCHAR});
			</foreach>
		</if>
	</update>

	<!-- -->
	<select id="selectByPrimaryKeys" resultMap="BaseResultMap"
		parameterType="java.util.List">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where
		<if test="ids != null and ids.size > 0">
			<foreach collection="ids" item="id" open="id in(" close=")" separator=",">
				#{id,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="ids == null or ids.size == 0">
			id is null
		</if>
	</select>

	<!-- -->
	<select id="selectList" resultMap="PageResultMap">
		SELECT DISTINCT
		  u.id,
		  u.name,
		  u.username,
		  u.gender,
		  u.phone,
		  u.email,
		  u.birthday,
		  u.status,
		  u.create_time,
		  u.modify_time,
		  u.department_id,
		  u.last_change_password,
		  u.expired,
		  u.locked, 
		  u.credentials_expired
		  
		FROM
		  sys_user u 
		  LEFT JOIN sys_user_role ur 
		    ON u.id = ur.user_id 
		  LEFT JOIN sys_role r 
		    ON r.id = ur.role_id
		  LEFT JOIN sys_role_authority ra 
		    ON ra.role_id = r.id 
		  LEFT JOIN sys_authority a 
		    ON ra.authority_id = a.id
		  LEFT JOIN sys_department dept
		  	ON dept.id = u.department_id
	</select>
	
	<!--  -->
	<delete id="deleteByPrimaryKeys" parameterType="java.util.List">
		delete from sys_user
		where
		<if test="ids != null and ids.size > 0">
			<foreach collection="ids" item="id" open="id in(" close=")" separator=",">
				#{id,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="ids == null or ids.size == 0">
			id is null
		</if>
		;
		delete from sys_user_role
		    where 
	    <if test="ids != null and ids.size > 0">
			<foreach collection="ids" item="id" open="user_id in(" close=")" separator=",">
				#{id,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="ids == null or ids.size == 0">
			user_id is null
		</if>
		;
	</delete>
	
	<!--  -->
	<select id="loadUserByUsername" resultMap="AuthoritiesResultMap" parameterType="java.lang.String" >
	    SELECT 
		  u.id,
		  u.name,
		  u.username,
		  u.gender,
		  u.phone,
		  u.email,
		  u.birthday,
		  u.status,
		  u.create_time,
		  u.modify_time,
		  u.department_id,
		  u.last_change_password,
		  u.expired,
		  u.locked, 
		  u.credentials_expired,
		  u.password,
		  u.salt,
		  
		  r.id AS role_id,
		  r.code AS role_code,
		  r.name AS role_name,
		  r.modify_time AS role_modify_time,
		  r.create_time AS role_create_time,
		  r.description AS role_description,
		  
		  a.id AS authority_id,
		  a.code AS authority_code,
		  a.name AS authority_name,
		  a.description AS authority_description,
		  a.create_time AS authority_create_time,
		  a.modify_time AS authority_modify_time
		FROM
		  sys_user u 
		  LEFT JOIN sys_user_role ur 
		    ON u.id = ur.user_id 
		  LEFT JOIN sys_role r 
		    ON r.id = ur.role_id
		  LEFT JOIN sys_role_authority ra 
		    ON ra.role_id = r.id 
		  LEFT JOIN sys_authority a 
		    ON ra.authority_id = a.id 
		WHERE 
			u.username = #{username,jdbcType=VARCHAR}
  </select>
</mapper>